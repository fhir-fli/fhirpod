import 'package:fhir/r5.dart' as client;
import 'package:fhirpod_server/src/generated/protocol.dart' as server;
client.Communication communicationommunicationToServer(server.Communication resource) => client.Communication(

id: resource.id == null ? null : resource.id,
meta: resource.meta == null ? null : resource.meta,
implicitRules: resource.implicitRules == null ? null : resource.implicitRules,
implicitRulesElement: resource.implicitRulesElement == null ? null : resource.implicitRulesElement,
language: resource.language == null ? null : resource.language,
languageElement: resource.languageElement == null ? null : resource.languageElement,
text: resource.text == null ? null : resource.text,
contained: resource.contained == null ? null : resource.contained,
extension_: resource.extension_ == null ? null : resource.extension_,
modifierExtension: resource.modifierExtension == null ? null : resource.modifierExtension,
identifier: resource.identifier == null ? null : resource.identifier,
instantiatesCanonical: resource.instantiatesCanonical == null ? null : resource.instantiatesCanonical,
instantiatesUri: resource.instantiatesUri == null ? null : resource.instantiatesUri,
instantiatesUriElement: resource.instantiatesUriElement == null ? null : resource.instantiatesUriElement,
basedOn: resource.basedOn == null ? null : resource.basedOn,
partOf: resource.partOf == null ? null : resource.partOf,
inResponseTo: resource.inResponseTo == null ? null : resource.inResponseTo,
status: resource.status == null ? null : resource.status,
statusElement: resource.statusElement == null ? null : resource.statusElement,
statusReason: resource.statusReason == null ? null : resource.statusReason,
category: resource.category == null ? null : resource.category,
priority: resource.priority == null ? null : resource.priority,
priorityElement: resource.priorityElement == null ? null : resource.priorityElement,
medium: resource.medium == null ? null : resource.medium,
subject: resource.subject == null ? null : resource.subject,
topic: resource.topic == null ? null : resource.topic,
about: resource.about == null ? null : resource.about,
encounter: resource.encounter == null ? null : resource.encounter,
sent: resource.sent == null ? null : resource.sent,
sentElement: resource.sentElement == null ? null : resource.sentElement,
received: resource.received == null ? null : resource.received,
receivedElement: resource.receivedElement == null ? null : resource.receivedElement,
recipient: resource.recipient == null ? null : resource.recipient,
sender: resource.sender == null ? null : resource.sender,
reason: resource.reason == null ? null : resource.reason,
payload: resource.payload == null ? null : resource.payload,
note: resource.note == null ? null : resource.note,

);
