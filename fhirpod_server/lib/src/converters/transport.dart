import 'package:fhir/r5.dart' as client;
import 'package:fhirpod_server/src/generated/protocol.dart' as server;
client.Transport transportransportToServer(server.Transport resource) => client.Transport(

id: resource.id == null ? null : resource.id,
meta: resource.meta == null ? null : resource.meta,
implicitRules: resource.implicitRules == null ? null : resource.implicitRules,
implicitRulesElement: resource.implicitRulesElement == null ? null : resource.implicitRulesElement,
language: resource.language == null ? null : resource.language,
languageElement: resource.languageElement == null ? null : resource.languageElement,
text: resource.text == null ? null : resource.text,
contained: resource.contained == null ? null : resource.contained,
extension_: resource.extension_ == null ? null : resource.extension_,
modifierExtension: resource.modifierExtension == null ? null : resource.modifierExtension,
identifier: resource.identifier == null ? null : resource.identifier,
instantiatesCanonical: resource.instantiatesCanonical == null ? null : resource.instantiatesCanonical,
instantiatesUri: resource.instantiatesUri == null ? null : resource.instantiatesUri,
instantiatesUriElement: resource.instantiatesUriElement == null ? null : resource.instantiatesUriElement,
basedOn: resource.basedOn == null ? null : resource.basedOn,
groupIdentifier: resource.groupIdentifier == null ? null : resource.groupIdentifier,
partOf: resource.partOf == null ? null : resource.partOf,
status: resource.status == null ? null : resource.status,
statusElement: resource.statusElement == null ? null : resource.statusElement,
statusReason: resource.statusReason == null ? null : resource.statusReason,
intent: resource.intent == null ? null : resource.intent,
intentElement: resource.intentElement == null ? null : resource.intentElement,
priority: resource.priority == null ? null : resource.priority,
priorityElement: resource.priorityElement == null ? null : resource.priorityElement,
code: resource.code == null ? null : resource.code,
description: resource.description == null ? null : resource.description,
descriptionElement: resource.descriptionElement == null ? null : resource.descriptionElement,
focus: resource.focus == null ? null : resource.focus,
for_: resource.for_ == null ? null : resource.for_,
encounter: resource.encounter == null ? null : resource.encounter,
completionTime: resource.completionTime == null ? null : resource.completionTime,
completionTimeElement: resource.completionTimeElement == null ? null : resource.completionTimeElement,
authoredOn: resource.authoredOn == null ? null : resource.authoredOn,
authoredOnElement: resource.authoredOnElement == null ? null : resource.authoredOnElement,
lastModified: resource.lastModified == null ? null : resource.lastModified,
lastModifiedElement: resource.lastModifiedElement == null ? null : resource.lastModifiedElement,
requester: resource.requester == null ? null : resource.requester,
performerType: resource.performerType == null ? null : resource.performerType,
owner: resource.owner == null ? null : resource.owner,
location: resource.location == null ? null : resource.location,
insurance: resource.insurance == null ? null : resource.insurance,
note: resource.note == null ? null : resource.note,
relevantHistory: resource.relevantHistory == null ? null : resource.relevantHistory,
restriction: resource.restriction == null ? null : resource.restriction,
input: resource.input == null ? null : resource.input,
output: resource.output == null ? null : resource.output,
requestedLocation: resource.requestedLocation == null ? null : resource.requestedLocation,
currentLocation: resource.currentLocation == null ? null : resource.currentLocation,
reason: resource.reason == null ? null : resource.reason,
history: resource.history == null ? null : resource.history,

);
