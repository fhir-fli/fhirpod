import 'package:fhir/r5.dart' as client;
import 'package:fhirpod_server/src/generated/protocol.dart' as server;
client.GuidanceResponse guidanceresponseuidanceResponseToServer(server.GuidanceResponse resource) => client.GuidanceResponse(

id: resource.id == null ? null : resource.id,
meta: resource.meta == null ? null : resource.meta,
implicitRules: resource.implicitRules == null ? null : resource.implicitRules,
implicitRulesElement: resource.implicitRulesElement == null ? null : resource.implicitRulesElement,
language: resource.language == null ? null : resource.language,
languageElement: resource.languageElement == null ? null : resource.languageElement,
text: resource.text == null ? null : resource.text,
contained: resource.contained == null ? null : resource.contained,
extension_: resource.extension_ == null ? null : resource.extension_,
modifierExtension: resource.modifierExtension == null ? null : resource.modifierExtension,
requestIdentifier: resource.requestIdentifier == null ? null : resource.requestIdentifier,
identifier: resource.identifier == null ? null : resource.identifier,
moduleUri: resource.moduleUri == null ? null : resource.moduleUri,
moduleUriElement: resource.moduleUriElement == null ? null : resource.moduleUriElement,
moduleCanonical: resource.moduleCanonical == null ? null : resource.moduleCanonical,
moduleCanonicalElement: resource.moduleCanonicalElement == null ? null : resource.moduleCanonicalElement,
moduleCodeableConcept: resource.moduleCodeableConcept == null ? null : resource.moduleCodeableConcept,
status: resource.status == null ? null : resource.status,
statusElement: resource.statusElement == null ? null : resource.statusElement,
subject: resource.subject == null ? null : resource.subject,
encounter: resource.encounter == null ? null : resource.encounter,
occurrenceDateTime: resource.occurrenceDateTime == null ? null : resource.occurrenceDateTime,
occurrenceDateTimeElement: resource.occurrenceDateTimeElement == null ? null : resource.occurrenceDateTimeElement,
performer: resource.performer == null ? null : resource.performer,
reason: resource.reason == null ? null : resource.reason,
note: resource.note == null ? null : resource.note,
evaluationMessage: resource.evaluationMessage == null ? null : resource.evaluationMessage,
outputParameters: resource.outputParameters == null ? null : resource.outputParameters,
result: resource.result == null ? null : resource.result,
dataRequirement: resource.dataRequirement == null ? null : resource.dataRequirement,

);
