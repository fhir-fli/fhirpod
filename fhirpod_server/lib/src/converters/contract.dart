import 'package:fhir/r5.dart' as client;
import 'package:fhirpod_server/src/generated/protocol.dart' as server;
client.Contract contractontractToServer(server.Contract resource) => client.Contract(

id: resource.id == null ? null : resource.id,
meta: resource.meta == null ? null : resource.meta,
implicitRules: resource.implicitRules == null ? null : resource.implicitRules,
implicitRulesElement: resource.implicitRulesElement == null ? null : resource.implicitRulesElement,
language: resource.language == null ? null : resource.language,
languageElement: resource.languageElement == null ? null : resource.languageElement,
text: resource.text == null ? null : resource.text,
contained: resource.contained == null ? null : resource.contained,
extension_: resource.extension_ == null ? null : resource.extension_,
modifierExtension: resource.modifierExtension == null ? null : resource.modifierExtension,
identifier: resource.identifier == null ? null : resource.identifier,
url: resource.url == null ? null : resource.url,
urlElement: resource.urlElement == null ? null : resource.urlElement,
version: resource.version == null ? null : resource.version,
versionElement: resource.versionElement == null ? null : resource.versionElement,
status: resource.status == null ? null : resource.status,
statusElement: resource.statusElement == null ? null : resource.statusElement,
legalState: resource.legalState == null ? null : resource.legalState,
instantiatesCanonical: resource.instantiatesCanonical == null ? null : resource.instantiatesCanonical,
instantiatesUri: resource.instantiatesUri == null ? null : resource.instantiatesUri,
instantiatesUriElement: resource.instantiatesUriElement == null ? null : resource.instantiatesUriElement,
contentDerivative: resource.contentDerivative == null ? null : resource.contentDerivative,
issued: resource.issued == null ? null : resource.issued,
issuedElement: resource.issuedElement == null ? null : resource.issuedElement,
applies: resource.applies == null ? null : resource.applies,
expirationType: resource.expirationType == null ? null : resource.expirationType,
subject: resource.subject == null ? null : resource.subject,
authority: resource.authority == null ? null : resource.authority,
domain: resource.domain == null ? null : resource.domain,
site: resource.site == null ? null : resource.site,
name: resource.name == null ? null : resource.name,
nameElement: resource.nameElement == null ? null : resource.nameElement,
title: resource.title == null ? null : resource.title,
titleElement: resource.titleElement == null ? null : resource.titleElement,
subtitle: resource.subtitle == null ? null : resource.subtitle,
subtitleElement: resource.subtitleElement == null ? null : resource.subtitleElement,
alias: resource.alias == null ? null : resource.alias,
aliasElement: resource.aliasElement == null ? null : resource.aliasElement,
author: resource.author == null ? null : resource.author,
scope: resource.scope == null ? null : resource.scope,
topicCodeableConcept: resource.topicCodeableConcept == null ? null : resource.topicCodeableConcept,
topicReference: resource.topicReference == null ? null : resource.topicReference,
type: resource.type == null ? null : resource.type,
subType: resource.subType == null ? null : resource.subType,
contentDefinition: resource.contentDefinition == null ? null : resource.contentDefinition,
term: resource.term == null ? null : resource.term,
supportingInfo: resource.supportingInfo == null ? null : resource.supportingInfo,
relevantHistory: resource.relevantHistory == null ? null : resource.relevantHistory,
signer: resource.signer == null ? null : resource.signer,
friendly: resource.friendly == null ? null : resource.friendly,
legal: resource.legal == null ? null : resource.legal,
rule: resource.rule == null ? null : resource.rule,
legallyBindingAttachment: resource.legallyBindingAttachment == null ? null : resource.legallyBindingAttachment,
legallyBindingReference: resource.legallyBindingReference == null ? null : resource.legallyBindingReference,

);
