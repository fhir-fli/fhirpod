import 'package:fhir/r5.dart' as client;
import 'package:fhirpod_server/src/generated/protocol.dart' as server;
client.AppointmentResponse appointmentresponseppointmentResponseToServer(server.AppointmentResponse resource) => client.AppointmentResponse(

id: resource.id == null ? null : resource.id,
meta: resource.meta == null ? null : resource.meta,
implicitRules: resource.implicitRules == null ? null : resource.implicitRules,
implicitRulesElement: resource.implicitRulesElement == null ? null : resource.implicitRulesElement,
language: resource.language == null ? null : resource.language,
languageElement: resource.languageElement == null ? null : resource.languageElement,
text: resource.text == null ? null : resource.text,
contained: resource.contained == null ? null : resource.contained,
extension_: resource.extension_ == null ? null : resource.extension_,
modifierExtension: resource.modifierExtension == null ? null : resource.modifierExtension,
identifier: resource.identifier == null ? null : resource.identifier,
appointment: resource.appointment == null ? null : resource.appointment,
proposedNewTime: resource.proposedNewTime == null ? null : resource.proposedNewTime,
proposedNewTimeElement: resource.proposedNewTimeElement == null ? null : resource.proposedNewTimeElement,
start: resource.start == null ? null : resource.start,
startElement: resource.startElement == null ? null : resource.startElement,
end: resource.end == null ? null : resource.end,
endElement: resource.endElement == null ? null : resource.endElement,
participantType: resource.participantType == null ? null : resource.participantType,
actor: resource.actor == null ? null : resource.actor,
participantStatus: resource.participantStatus == null ? null : resource.participantStatus,
participantStatusElement: resource.participantStatusElement == null ? null : resource.participantStatusElement,
comment: resource.comment == null ? null : resource.comment,
commentElement: resource.commentElement == null ? null : resource.commentElement,
recurring: resource.recurring == null ? null : resource.recurring,
recurringElement: resource.recurringElement == null ? null : resource.recurringElement,
occurrenceDate: resource.occurrenceDate == null ? null : resource.occurrenceDate,
occurrenceDateElement: resource.occurrenceDateElement == null ? null : resource.occurrenceDateElement,
recurrenceId: resource.recurrenceId == null ? null : resource.recurrenceId,
recurrenceIdElement: resource.recurrenceIdElement == null ? null : resource.recurrenceIdElement,

);
