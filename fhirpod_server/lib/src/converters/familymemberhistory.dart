import 'package:fhir/r5.dart' as client;
import 'package:fhirpod_server/src/generated/protocol.dart' as server;
client.FamilyMemberHistory familymemberhistoryamilyMemberHistoryToServer(server.FamilyMemberHistory resource) => client.FamilyMemberHistory(

id: resource.id == null ? null : resource.id,
meta: resource.meta == null ? null : resource.meta,
implicitRules: resource.implicitRules == null ? null : resource.implicitRules,
implicitRulesElement: resource.implicitRulesElement == null ? null : resource.implicitRulesElement,
language: resource.language == null ? null : resource.language,
languageElement: resource.languageElement == null ? null : resource.languageElement,
text: resource.text == null ? null : resource.text,
contained: resource.contained == null ? null : resource.contained,
extension_: resource.extension_ == null ? null : resource.extension_,
modifierExtension: resource.modifierExtension == null ? null : resource.modifierExtension,
identifier: resource.identifier == null ? null : resource.identifier,
instantiatesCanonical: resource.instantiatesCanonical == null ? null : resource.instantiatesCanonical,
instantiatesUri: resource.instantiatesUri == null ? null : resource.instantiatesUri,
instantiatesUriElement: resource.instantiatesUriElement == null ? null : resource.instantiatesUriElement,
status: resource.status == null ? null : resource.status,
statusElement: resource.statusElement == null ? null : resource.statusElement,
dataAbsentReason: resource.dataAbsentReason == null ? null : resource.dataAbsentReason,
patient: resource.patient == null ? null : resource.patient,
date: resource.date == null ? null : resource.date,
dateElement: resource.dateElement == null ? null : resource.dateElement,
participant: resource.participant == null ? null : resource.participant,
name: resource.name == null ? null : resource.name,
nameElement: resource.nameElement == null ? null : resource.nameElement,
relationship: resource.relationship == null ? null : resource.relationship,
sex: resource.sex == null ? null : resource.sex,
bornPeriod: resource.bornPeriod == null ? null : resource.bornPeriod,
bornDate: resource.bornDate == null ? null : resource.bornDate,
bornDateElement: resource.bornDateElement == null ? null : resource.bornDateElement,
bornString: resource.bornString == null ? null : resource.bornString,
bornStringElement: resource.bornStringElement == null ? null : resource.bornStringElement,
ageAge: resource.ageAge == null ? null : resource.ageAge,
ageRange: resource.ageRange == null ? null : resource.ageRange,
ageString: resource.ageString == null ? null : resource.ageString,
ageStringElement: resource.ageStringElement == null ? null : resource.ageStringElement,
estimatedAge: resource.estimatedAge == null ? null : resource.estimatedAge,
estimatedAgeElement: resource.estimatedAgeElement == null ? null : resource.estimatedAgeElement,
deceasedBoolean: resource.deceasedBoolean == null ? null : resource.deceasedBoolean,
deceasedBooleanElement: resource.deceasedBooleanElement == null ? null : resource.deceasedBooleanElement,
deceasedAge: resource.deceasedAge == null ? null : resource.deceasedAge,
deceasedRange: resource.deceasedRange == null ? null : resource.deceasedRange,
deceasedDate: resource.deceasedDate == null ? null : resource.deceasedDate,
deceasedDateElement: resource.deceasedDateElement == null ? null : resource.deceasedDateElement,
deceasedString: resource.deceasedString == null ? null : resource.deceasedString,
deceasedStringElement: resource.deceasedStringElement == null ? null : resource.deceasedStringElement,
reason: resource.reason == null ? null : resource.reason,
note: resource.note == null ? null : resource.note,
condition: resource.condition == null ? null : resource.condition,
procedure: resource.procedure == null ? null : resource.procedure,

);
