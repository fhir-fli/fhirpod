import 'package:fhir/r5.dart' as client;
import 'package:fhirpod_server/src/generated/protocol.dart' as server;
client.ObservationComponent observationcomponentbservationComponentToServer(server.ObservationComponent resource) => client.ObservationComponent(
id: resource.id == null ? null : resource.id,
extension_: resource.extension_ == null ? null : resource.extension_,
modifierExtension: resource.modifierExtension == null ? null : resource.modifierExtension,
code: resource.code == null ? null : resource.code,
valueQuantity: resource.valueQuantity == null ? null : resource.valueQuantity,
valueCodeableConcept: resource.valueCodeableConcept == null ? null : resource.valueCodeableConcept,
valueString: resource.valueString == null ? null : resource.valueString,
valueStringElement: resource.valueStringElement == null ? null : resource.valueStringElement,
valueBoolean: resource.valueBoolean == null ? null : resource.valueBoolean,
valueBooleanElement: resource.valueBooleanElement == null ? null : resource.valueBooleanElement,
valueInteger: resource.valueInteger == null ? null : resource.valueInteger,
valueIntegerElement: resource.valueIntegerElement == null ? null : resource.valueIntegerElement,
valueRange: resource.valueRange == null ? null : resource.valueRange,
valueRatio: resource.valueRatio == null ? null : resource.valueRatio,
valueSampledData: resource.valueSampledData == null ? null : resource.valueSampledData,
valueTime: resource.valueTime == null ? null : resource.valueTime,
valueTimeElement: resource.valueTimeElement == null ? null : resource.valueTimeElement,
valueDateTime: resource.valueDateTime == null ? null : resource.valueDateTime,
valueDateTimeElement: resource.valueDateTimeElement == null ? null : resource.valueDateTimeElement,
valuePeriod: resource.valuePeriod == null ? null : resource.valuePeriod,
valueAttachment: resource.valueAttachment == null ? null : resource.valueAttachment,
valueReference: resource.valueReference == null ? null : resource.valueReference,
dataAbsentReason: resource.dataAbsentReason == null ? null : resource.dataAbsentReason,
interpretation: resource.interpretation == null ? null : resource.interpretation,
referenceRange: resource.referenceRange == null ? null : resource.referenceRange,

);
