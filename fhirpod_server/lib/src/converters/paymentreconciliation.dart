import 'package:fhir/r5.dart' as client;
import 'package:fhirpod_server/src/generated/protocol.dart' as server;
client.PaymentReconciliation paymentreconciliationaymentReconciliationToServer(server.PaymentReconciliation resource) => client.PaymentReconciliation(

id: resource.id == null ? null : resource.id,
meta: resource.meta == null ? null : resource.meta,
implicitRules: resource.implicitRules == null ? null : resource.implicitRules,
implicitRulesElement: resource.implicitRulesElement == null ? null : resource.implicitRulesElement,
language: resource.language == null ? null : resource.language,
languageElement: resource.languageElement == null ? null : resource.languageElement,
text: resource.text == null ? null : resource.text,
contained: resource.contained == null ? null : resource.contained,
extension_: resource.extension_ == null ? null : resource.extension_,
modifierExtension: resource.modifierExtension == null ? null : resource.modifierExtension,
identifier: resource.identifier == null ? null : resource.identifier,
type: resource.type == null ? null : resource.type,
status: resource.status == null ? null : resource.status,
statusElement: resource.statusElement == null ? null : resource.statusElement,
kind: resource.kind == null ? null : resource.kind,
period: resource.period == null ? null : resource.period,
created: resource.created == null ? null : resource.created,
createdElement: resource.createdElement == null ? null : resource.createdElement,
enterer: resource.enterer == null ? null : resource.enterer,
issuerType: resource.issuerType == null ? null : resource.issuerType,
paymentIssuer: resource.paymentIssuer == null ? null : resource.paymentIssuer,
request: resource.request == null ? null : resource.request,
requestor: resource.requestor == null ? null : resource.requestor,
outcome: resource.outcome == null ? null : resource.outcome,
outcomeElement: resource.outcomeElement == null ? null : resource.outcomeElement,
disposition: resource.disposition == null ? null : resource.disposition,
dispositionElement: resource.dispositionElement == null ? null : resource.dispositionElement,
date: resource.date == null ? null : resource.date,
dateElement: resource.dateElement == null ? null : resource.dateElement,
location: resource.location == null ? null : resource.location,
method: resource.method == null ? null : resource.method,
cardBrand: resource.cardBrand == null ? null : resource.cardBrand,
cardBrandElement: resource.cardBrandElement == null ? null : resource.cardBrandElement,
accountNumber: resource.accountNumber == null ? null : resource.accountNumber,
accountNumberElement: resource.accountNumberElement == null ? null : resource.accountNumberElement,
expirationDate: resource.expirationDate == null ? null : resource.expirationDate,
expirationDateElement: resource.expirationDateElement == null ? null : resource.expirationDateElement,
processor: resource.processor == null ? null : resource.processor,
processorElement: resource.processorElement == null ? null : resource.processorElement,
referenceNumber: resource.referenceNumber == null ? null : resource.referenceNumber,
referenceNumberElement: resource.referenceNumberElement == null ? null : resource.referenceNumberElement,
authorization: resource.authorization == null ? null : resource.authorization,
authorizationElement: resource.authorizationElement == null ? null : resource.authorizationElement,
tenderedAmount: resource.tenderedAmount == null ? null : resource.tenderedAmount,
returnedAmount: resource.returnedAmount == null ? null : resource.returnedAmount,
amount: resource.amount == null ? null : resource.amount,
paymentIdentifier: resource.paymentIdentifier == null ? null : resource.paymentIdentifier,
allocation: resource.allocation == null ? null : resource.allocation,
formCode: resource.formCode == null ? null : resource.formCode,
processNote: resource.processNote == null ? null : resource.processNote,

);
