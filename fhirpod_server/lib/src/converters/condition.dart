import 'package:fhir/r5.dart' as client;
import 'package:fhirpod_server/src/generated/protocol.dart' as server;
client.Condition conditiononditionToServer(server.Condition resource) => client.Condition(

id: resource.id == null ? null : resource.id,
meta: resource.meta == null ? null : resource.meta,
implicitRules: resource.implicitRules == null ? null : resource.implicitRules,
implicitRulesElement: resource.implicitRulesElement == null ? null : resource.implicitRulesElement,
language: resource.language == null ? null : resource.language,
languageElement: resource.languageElement == null ? null : resource.languageElement,
text: resource.text == null ? null : resource.text,
contained: resource.contained == null ? null : resource.contained,
extension_: resource.extension_ == null ? null : resource.extension_,
modifierExtension: resource.modifierExtension == null ? null : resource.modifierExtension,
identifier: resource.identifier == null ? null : resource.identifier,
clinicalStatus: resource.clinicalStatus == null ? null : resource.clinicalStatus,
verificationStatus: resource.verificationStatus == null ? null : resource.verificationStatus,
category: resource.category == null ? null : resource.category,
severity: resource.severity == null ? null : resource.severity,
code: resource.code == null ? null : resource.code,
bodySite: resource.bodySite == null ? null : resource.bodySite,
subject: resource.subject == null ? null : resource.subject,
encounter: resource.encounter == null ? null : resource.encounter,
onsetDateTime: resource.onsetDateTime == null ? null : resource.onsetDateTime,
onsetDateTimeElement: resource.onsetDateTimeElement == null ? null : resource.onsetDateTimeElement,
onsetAge: resource.onsetAge == null ? null : resource.onsetAge,
onsetPeriod: resource.onsetPeriod == null ? null : resource.onsetPeriod,
onsetRange: resource.onsetRange == null ? null : resource.onsetRange,
onsetString: resource.onsetString == null ? null : resource.onsetString,
onsetStringElement: resource.onsetStringElement == null ? null : resource.onsetStringElement,
abatementDateTime: resource.abatementDateTime == null ? null : resource.abatementDateTime,
abatementDateTimeElement: resource.abatementDateTimeElement == null ? null : resource.abatementDateTimeElement,
abatementAge: resource.abatementAge == null ? null : resource.abatementAge,
abatementPeriod: resource.abatementPeriod == null ? null : resource.abatementPeriod,
abatementRange: resource.abatementRange == null ? null : resource.abatementRange,
abatementString: resource.abatementString == null ? null : resource.abatementString,
abatementStringElement: resource.abatementStringElement == null ? null : resource.abatementStringElement,
recordedDate: resource.recordedDate == null ? null : resource.recordedDate,
recordedDateElement: resource.recordedDateElement == null ? null : resource.recordedDateElement,
participant: resource.participant == null ? null : resource.participant,
stage: resource.stage == null ? null : resource.stage,
evidence: resource.evidence == null ? null : resource.evidence,
note: resource.note == null ? null : resource.note,

);
