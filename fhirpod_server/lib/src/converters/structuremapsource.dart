import 'package:fhir/r5.dart' as client;
import 'package:fhirpod_server/src/generated/protocol.dart' as server;
client.StructureMapSource structuremapsourcetructureMapSourceToServer(server.StructureMapSource resource) => client.StructureMapSource(
id: resource.id == null ? null : resource.id,
extension_: resource.extension_ == null ? null : resource.extension_,
modifierExtension: resource.modifierExtension == null ? null : resource.modifierExtension,
context: resource.context == null ? null : resource.context,
contextElement: resource.contextElement == null ? null : resource.contextElement,
min: resource.min == null ? null : resource.min,
minElement: resource.minElement == null ? null : resource.minElement,
max: resource.max == null ? null : resource.max,
maxElement: resource.maxElement == null ? null : resource.maxElement,
type: resource.type == null ? null : resource.type,
typeElement: resource.typeElement == null ? null : resource.typeElement,
defaultValue: resource.defaultValue == null ? null : resource.defaultValue,
defaultValueElement: resource.defaultValueElement == null ? null : resource.defaultValueElement,
element: resource.element == null ? null : resource.element,
elementElement: resource.elementElement == null ? null : resource.elementElement,
listMode: resource.listMode == null ? null : resource.listMode,
listModeElement: resource.listModeElement == null ? null : resource.listModeElement,
variable: resource.variable == null ? null : resource.variable,
variableElement: resource.variableElement == null ? null : resource.variableElement,
condition: resource.condition == null ? null : resource.condition,
conditionElement: resource.conditionElement == null ? null : resource.conditionElement,
check: resource.check == null ? null : resource.check,
checkElement: resource.checkElement == null ? null : resource.checkElement,
logMessage: resource.logMessage == null ? null : resource.logMessage,
logMessageElement: resource.logMessageElement == null ? null : resource.logMessageElement,

);
