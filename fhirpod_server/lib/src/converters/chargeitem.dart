import 'package:fhir/r5.dart' as client;
import 'package:fhirpod_server/src/generated/protocol.dart' as server;
client.ChargeItem chargeitemhargeItemToServer(server.ChargeItem resource) => client.ChargeItem(

id: resource.id == null ? null : resource.id,
meta: resource.meta == null ? null : resource.meta,
implicitRules: resource.implicitRules == null ? null : resource.implicitRules,
implicitRulesElement: resource.implicitRulesElement == null ? null : resource.implicitRulesElement,
language: resource.language == null ? null : resource.language,
languageElement: resource.languageElement == null ? null : resource.languageElement,
text: resource.text == null ? null : resource.text,
contained: resource.contained == null ? null : resource.contained,
extension_: resource.extension_ == null ? null : resource.extension_,
modifierExtension: resource.modifierExtension == null ? null : resource.modifierExtension,
identifier: resource.identifier == null ? null : resource.identifier,
definitionUri: resource.definitionUri == null ? null : resource.definitionUri,
definitionUriElement: resource.definitionUriElement == null ? null : resource.definitionUriElement,
definitionCanonical: resource.definitionCanonical == null ? null : resource.definitionCanonical,
status: resource.status == null ? null : resource.status,
statusElement: resource.statusElement == null ? null : resource.statusElement,
partOf: resource.partOf == null ? null : resource.partOf,
code: resource.code == null ? null : resource.code,
subject: resource.subject == null ? null : resource.subject,
encounter: resource.encounter == null ? null : resource.encounter,
occurrenceDateTime: resource.occurrenceDateTime == null ? null : resource.occurrenceDateTime,
occurrenceDateTimeElement: resource.occurrenceDateTimeElement == null ? null : resource.occurrenceDateTimeElement,
occurrencePeriod: resource.occurrencePeriod == null ? null : resource.occurrencePeriod,
occurrenceTiming: resource.occurrenceTiming == null ? null : resource.occurrenceTiming,
performer: resource.performer == null ? null : resource.performer,
performingOrganization: resource.performingOrganization == null ? null : resource.performingOrganization,
requestingOrganization: resource.requestingOrganization == null ? null : resource.requestingOrganization,
costCenter: resource.costCenter == null ? null : resource.costCenter,
quantity: resource.quantity == null ? null : resource.quantity,
bodysite: resource.bodysite == null ? null : resource.bodysite,
unitPriceComponent: resource.unitPriceComponent == null ? null : resource.unitPriceComponent,
totalPriceComponent: resource.totalPriceComponent == null ? null : resource.totalPriceComponent,
overrideReason: resource.overrideReason == null ? null : resource.overrideReason,
enterer: resource.enterer == null ? null : resource.enterer,
enteredDate: resource.enteredDate == null ? null : resource.enteredDate,
enteredDateElement: resource.enteredDateElement == null ? null : resource.enteredDateElement,
reason: resource.reason == null ? null : resource.reason,
service: resource.service == null ? null : resource.service,
product: resource.product == null ? null : resource.product,
account: resource.account == null ? null : resource.account,
note: resource.note == null ? null : resource.note,
supportingInformation: resource.supportingInformation == null ? null : resource.supportingInformation,

);
