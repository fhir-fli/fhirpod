import 'package:fhir/r5.dart' as client;
import 'package:fhirpod_server/src/generated/protocol.dart' as server;
client.AdverseEvent adverseeventdverseEventToServer(server.AdverseEvent resource) => client.AdverseEvent(

id: resource.id == null ? null : resource.id,
meta: resource.meta == null ? null : resource.meta,
implicitRules: resource.implicitRules == null ? null : resource.implicitRules,
implicitRulesElement: resource.implicitRulesElement == null ? null : resource.implicitRulesElement,
language: resource.language == null ? null : resource.language,
languageElement: resource.languageElement == null ? null : resource.languageElement,
text: resource.text == null ? null : resource.text,
contained: resource.contained == null ? null : resource.contained,
extension_: resource.extension_ == null ? null : resource.extension_,
modifierExtension: resource.modifierExtension == null ? null : resource.modifierExtension,
identifier: resource.identifier == null ? null : resource.identifier,
status: resource.status == null ? null : resource.status,
statusElement: resource.statusElement == null ? null : resource.statusElement,
actuality: resource.actuality == null ? null : resource.actuality,
actualityElement: resource.actualityElement == null ? null : resource.actualityElement,
category: resource.category == null ? null : resource.category,
code: resource.code == null ? null : resource.code,
subject: resource.subject == null ? null : resource.subject,
encounter: resource.encounter == null ? null : resource.encounter,
occurrenceDateTime: resource.occurrenceDateTime == null ? null : resource.occurrenceDateTime,
occurrenceDateTimeElement: resource.occurrenceDateTimeElement == null ? null : resource.occurrenceDateTimeElement,
occurrencePeriod: resource.occurrencePeriod == null ? null : resource.occurrencePeriod,
occurrenceTiming: resource.occurrenceTiming == null ? null : resource.occurrenceTiming,
detected: resource.detected == null ? null : resource.detected,
detectedElement: resource.detectedElement == null ? null : resource.detectedElement,
recordedDate: resource.recordedDate == null ? null : resource.recordedDate,
recordedDateElement: resource.recordedDateElement == null ? null : resource.recordedDateElement,
resultingEffect: resource.resultingEffect == null ? null : resource.resultingEffect,
location: resource.location == null ? null : resource.location,
seriousness: resource.seriousness == null ? null : resource.seriousness,
outcome: resource.outcome == null ? null : resource.outcome,
recorder: resource.recorder == null ? null : resource.recorder,
participant: resource.participant == null ? null : resource.participant,
study: resource.study == null ? null : resource.study,
expectedInResearchStudy: resource.expectedInResearchStudy == null ? null : resource.expectedInResearchStudy,
expectedInResearchStudyElement: resource.expectedInResearchStudyElement == null ? null : resource.expectedInResearchStudyElement,
suspectEntity: resource.suspectEntity == null ? null : resource.suspectEntity,
contributingFactor: resource.contributingFactor == null ? null : resource.contributingFactor,
preventiveAction: resource.preventiveAction == null ? null : resource.preventiveAction,
mitigatingAction: resource.mitigatingAction == null ? null : resource.mitigatingAction,
supportingInfo: resource.supportingInfo == null ? null : resource.supportingInfo,
note: resource.note == null ? null : resource.note,

);
