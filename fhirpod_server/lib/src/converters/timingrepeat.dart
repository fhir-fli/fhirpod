import 'package:fhir/r5.dart' as client;
import 'package:fhirpod_server/src/generated/protocol.dart' as server;
client.TimingRepeat timingrepeatimingRepeatToServer(server.TimingRepeat resource) => client.TimingRepeat(
id: resource.id == null ? null : resource.id,
extension_: resource.extension_ == null ? null : resource.extension_,
modifierExtension: resource.modifierExtension == null ? null : resource.modifierExtension,
boundsDuration: resource.boundsDuration == null ? null : resource.boundsDuration,
boundsRange: resource.boundsRange == null ? null : resource.boundsRange,
boundsPeriod: resource.boundsPeriod == null ? null : resource.boundsPeriod,
count: resource.count == null ? null : resource.count,
countElement: resource.countElement == null ? null : resource.countElement,
countMax: resource.countMax == null ? null : resource.countMax,
countMaxElement: resource.countMaxElement == null ? null : resource.countMaxElement,
duration: resource.duration == null ? null : resource.duration,
durationElement: resource.durationElement == null ? null : resource.durationElement,
durationMax: resource.durationMax == null ? null : resource.durationMax,
durationMaxElement: resource.durationMaxElement == null ? null : resource.durationMaxElement,
durationUnit: resource.durationUnit == null ? null : resource.durationUnit,
durationUnitElement: resource.durationUnitElement == null ? null : resource.durationUnitElement,
frequency: resource.frequency == null ? null : resource.frequency,
frequencyElement: resource.frequencyElement == null ? null : resource.frequencyElement,
frequencyMax: resource.frequencyMax == null ? null : resource.frequencyMax,
frequencyMaxElement: resource.frequencyMaxElement == null ? null : resource.frequencyMaxElement,
period: resource.period == null ? null : resource.period,
periodElement: resource.periodElement == null ? null : resource.periodElement,
periodMax: resource.periodMax == null ? null : resource.periodMax,
periodMaxElement: resource.periodMaxElement == null ? null : resource.periodMaxElement,
periodUnit: resource.periodUnit == null ? null : resource.periodUnit,
periodUnitElement: resource.periodUnitElement == null ? null : resource.periodUnitElement,
dayOfWeek: resource.dayOfWeek == null ? null : resource.dayOfWeek,
dayOfWeekElement: resource.dayOfWeekElement == null ? null : resource.dayOfWeekElement,
timeOfDay: resource.timeOfDay == null ? null : resource.timeOfDay,
timeOfDayElement: resource.timeOfDayElement == null ? null : resource.timeOfDayElement,
when: resource.when == null ? null : resource.when,
whenElement: resource.whenElement == null ? null : resource.whenElement,
offset: resource.offset == null ? null : resource.offset,
offsetElement: resource.offsetElement == null ? null : resource.offsetElement,

);
