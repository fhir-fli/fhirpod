import 'package:fhir/r5.dart' as client;
import 'package:fhirpod_server/src/generated/protocol.dart' as server;
client.QuestionnaireItem questionnaireitemuestionnaireItemToServer(server.QuestionnaireItem resource) => client.QuestionnaireItem(
id: resource.id == null ? null : resource.id,
extension_: resource.extension_ == null ? null : resource.extension_,
modifierExtension: resource.modifierExtension == null ? null : resource.modifierExtension,
linkId: resource.linkId == null ? null : resource.linkId,
linkIdElement: resource.linkIdElement == null ? null : resource.linkIdElement,
definition: resource.definition == null ? null : resource.definition,
definitionElement: resource.definitionElement == null ? null : resource.definitionElement,
code: resource.code == null ? null : resource.code,
prefix: resource.prefix == null ? null : resource.prefix,
prefixElement: resource.prefixElement == null ? null : resource.prefixElement,
text: resource.text == null ? null : resource.text,
textElement: resource.textElement == null ? null : resource.textElement,
type: resource.type == null ? null : resource.type,
typeElement: resource.typeElement == null ? null : resource.typeElement,
enableWhen: resource.enableWhen == null ? null : resource.enableWhen,
enableBehavior: resource.enableBehavior == null ? null : resource.enableBehavior,
enableBehaviorElement: resource.enableBehaviorElement == null ? null : resource.enableBehaviorElement,
disabledDisplay: resource.disabledDisplay == null ? null : resource.disabledDisplay,
disabledDisplayElement: resource.disabledDisplayElement == null ? null : resource.disabledDisplayElement,
required_: resource.required_ == null ? null : resource.required_,
requiredElement: resource.requiredElement == null ? null : resource.requiredElement,
repeats: resource.repeats == null ? null : resource.repeats,
repeatsElement: resource.repeatsElement == null ? null : resource.repeatsElement,
readOnly: resource.readOnly == null ? null : resource.readOnly,
readOnlyElement: resource.readOnlyElement == null ? null : resource.readOnlyElement,
maxLength: resource.maxLength == null ? null : resource.maxLength,
maxLengthElement: resource.maxLengthElement == null ? null : resource.maxLengthElement,
answerConstraint: resource.answerConstraint == null ? null : resource.answerConstraint,
answerConstraintElement: resource.answerConstraintElement == null ? null : resource.answerConstraintElement,
answerValueSet: resource.answerValueSet == null ? null : resource.answerValueSet,
answerOption: resource.answerOption == null ? null : resource.answerOption,
initial: resource.initial == null ? null : resource.initial,
item: resource.item == null ? null : resource.item,

);
