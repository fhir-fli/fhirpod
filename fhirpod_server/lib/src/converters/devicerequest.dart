import 'package:fhir/r5.dart' as client;
import 'package:fhirpod_server/src/generated/protocol.dart' as server;
client.DeviceRequest devicerequesteviceRequestToServer(server.DeviceRequest resource) => client.DeviceRequest(

id: resource.id == null ? null : resource.id,
meta: resource.meta == null ? null : resource.meta,
implicitRules: resource.implicitRules == null ? null : resource.implicitRules,
implicitRulesElement: resource.implicitRulesElement == null ? null : resource.implicitRulesElement,
language: resource.language == null ? null : resource.language,
languageElement: resource.languageElement == null ? null : resource.languageElement,
text: resource.text == null ? null : resource.text,
contained: resource.contained == null ? null : resource.contained,
extension_: resource.extension_ == null ? null : resource.extension_,
modifierExtension: resource.modifierExtension == null ? null : resource.modifierExtension,
identifier: resource.identifier == null ? null : resource.identifier,
instantiatesCanonical: resource.instantiatesCanonical == null ? null : resource.instantiatesCanonical,
instantiatesUri: resource.instantiatesUri == null ? null : resource.instantiatesUri,
instantiatesUriElement: resource.instantiatesUriElement == null ? null : resource.instantiatesUriElement,
basedOn: resource.basedOn == null ? null : resource.basedOn,
replaces: resource.replaces == null ? null : resource.replaces,
groupIdentifier: resource.groupIdentifier == null ? null : resource.groupIdentifier,
status: resource.status == null ? null : resource.status,
statusElement: resource.statusElement == null ? null : resource.statusElement,
intent: resource.intent == null ? null : resource.intent,
intentElement: resource.intentElement == null ? null : resource.intentElement,
priority: resource.priority == null ? null : resource.priority,
priorityElement: resource.priorityElement == null ? null : resource.priorityElement,
doNotPerform: resource.doNotPerform == null ? null : resource.doNotPerform,
doNotPerformElement: resource.doNotPerformElement == null ? null : resource.doNotPerformElement,
code: resource.code == null ? null : resource.code,
quantity: resource.quantity == null ? null : resource.quantity,
quantityElement: resource.quantityElement == null ? null : resource.quantityElement,
parameter: resource.parameter == null ? null : resource.parameter,
subject: resource.subject == null ? null : resource.subject,
encounter: resource.encounter == null ? null : resource.encounter,
occurrenceDateTime: resource.occurrenceDateTime == null ? null : resource.occurrenceDateTime,
occurrenceDateTimeElement: resource.occurrenceDateTimeElement == null ? null : resource.occurrenceDateTimeElement,
occurrencePeriod: resource.occurrencePeriod == null ? null : resource.occurrencePeriod,
occurrenceTiming: resource.occurrenceTiming == null ? null : resource.occurrenceTiming,
authoredOn: resource.authoredOn == null ? null : resource.authoredOn,
authoredOnElement: resource.authoredOnElement == null ? null : resource.authoredOnElement,
requester: resource.requester == null ? null : resource.requester,
performer: resource.performer == null ? null : resource.performer,
reason: resource.reason == null ? null : resource.reason,
asNeeded: resource.asNeeded == null ? null : resource.asNeeded,
asNeededElement: resource.asNeededElement == null ? null : resource.asNeededElement,
asNeededFor: resource.asNeededFor == null ? null : resource.asNeededFor,
insurance: resource.insurance == null ? null : resource.insurance,
supportingInfo: resource.supportingInfo == null ? null : resource.supportingInfo,
note: resource.note == null ? null : resource.note,
relevantHistory: resource.relevantHistory == null ? null : resource.relevantHistory,

);
