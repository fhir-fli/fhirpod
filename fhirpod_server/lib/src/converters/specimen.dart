import 'package:fhir/r5.dart' as client;
import 'package:fhirpod_server/src/generated/protocol.dart' as server;
client.Specimen specimenpecimenToServer(server.Specimen resource) => client.Specimen(

id: resource.id == null ? null : resource.id,
meta: resource.meta == null ? null : resource.meta,
implicitRules: resource.implicitRules == null ? null : resource.implicitRules,
implicitRulesElement: resource.implicitRulesElement == null ? null : resource.implicitRulesElement,
language: resource.language == null ? null : resource.language,
languageElement: resource.languageElement == null ? null : resource.languageElement,
text: resource.text == null ? null : resource.text,
contained: resource.contained == null ? null : resource.contained,
extension_: resource.extension_ == null ? null : resource.extension_,
modifierExtension: resource.modifierExtension == null ? null : resource.modifierExtension,
identifier: resource.identifier == null ? null : resource.identifier,
accessionIdentifier: resource.accessionIdentifier == null ? null : resource.accessionIdentifier,
status: resource.status == null ? null : resource.status,
statusElement: resource.statusElement == null ? null : resource.statusElement,
type: resource.type == null ? null : resource.type,
subject: resource.subject == null ? null : resource.subject,
receivedTime: resource.receivedTime == null ? null : resource.receivedTime,
receivedTimeElement: resource.receivedTimeElement == null ? null : resource.receivedTimeElement,
parent: resource.parent == null ? null : resource.parent,
request: resource.request == null ? null : resource.request,
combined: resource.combined == null ? null : resource.combined,
combinedElement: resource.combinedElement == null ? null : resource.combinedElement,
role: resource.role == null ? null : resource.role,
feature: resource.feature == null ? null : resource.feature,
collection: resource.collection == null ? null : resource.collection,
processing: resource.processing == null ? null : resource.processing,
container: resource.container == null ? null : resource.container,
condition: resource.condition == null ? null : resource.condition,
note: resource.note == null ? null : resource.note,

);
