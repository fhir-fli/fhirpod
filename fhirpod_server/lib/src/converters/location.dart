import 'package:fhir/r5.dart' as client;
import 'package:fhirpod_server/src/generated/protocol.dart' as server;
client.Location locationocationToServer(server.Location resource) => client.Location(

id: resource.id == null ? null : resource.id,
meta: resource.meta == null ? null : resource.meta,
implicitRules: resource.implicitRules == null ? null : resource.implicitRules,
implicitRulesElement: resource.implicitRulesElement == null ? null : resource.implicitRulesElement,
language: resource.language == null ? null : resource.language,
languageElement: resource.languageElement == null ? null : resource.languageElement,
text: resource.text == null ? null : resource.text,
contained: resource.contained == null ? null : resource.contained,
extension_: resource.extension_ == null ? null : resource.extension_,
modifierExtension: resource.modifierExtension == null ? null : resource.modifierExtension,
identifier: resource.identifier == null ? null : resource.identifier,
status: resource.status == null ? null : resource.status,
statusElement: resource.statusElement == null ? null : resource.statusElement,
operationalStatus: resource.operationalStatus == null ? null : resource.operationalStatus,
name: resource.name == null ? null : resource.name,
nameElement: resource.nameElement == null ? null : resource.nameElement,
alias: resource.alias == null ? null : resource.alias,
aliasElement: resource.aliasElement == null ? null : resource.aliasElement,
description: resource.description == null ? null : resource.description,
descriptionElement: resource.descriptionElement == null ? null : resource.descriptionElement,
mode: resource.mode == null ? null : resource.mode,
modeElement: resource.modeElement == null ? null : resource.modeElement,
type: resource.type == null ? null : resource.type,
contact: resource.contact == null ? null : resource.contact,
address: resource.address == null ? null : resource.address,
form: resource.form == null ? null : resource.form,
position: resource.position == null ? null : resource.position,
managingOrganization: resource.managingOrganization == null ? null : resource.managingOrganization,
partOf: resource.partOf == null ? null : resource.partOf,
characteristic: resource.characteristic == null ? null : resource.characteristic,
hoursOfOperation: resource.hoursOfOperation == null ? null : resource.hoursOfOperation,
virtualService: resource.virtualService == null ? null : resource.virtualService,
endpoint: resource.endpoint == null ? null : resource.endpoint,

);
