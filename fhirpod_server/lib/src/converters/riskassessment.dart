import 'package:fhir/r5.dart' as client;
import 'package:fhirpod_server/src/generated/protocol.dart' as server;
client.RiskAssessment riskassessmentiskAssessmentToServer(server.RiskAssessment resource) => client.RiskAssessment(

id: resource.id == null ? null : resource.id,
meta: resource.meta == null ? null : resource.meta,
implicitRules: resource.implicitRules == null ? null : resource.implicitRules,
implicitRulesElement: resource.implicitRulesElement == null ? null : resource.implicitRulesElement,
language: resource.language == null ? null : resource.language,
languageElement: resource.languageElement == null ? null : resource.languageElement,
text: resource.text == null ? null : resource.text,
contained: resource.contained == null ? null : resource.contained,
extension_: resource.extension_ == null ? null : resource.extension_,
modifierExtension: resource.modifierExtension == null ? null : resource.modifierExtension,
identifier: resource.identifier == null ? null : resource.identifier,
basedOn: resource.basedOn == null ? null : resource.basedOn,
parent: resource.parent == null ? null : resource.parent,
status: resource.status == null ? null : resource.status,
statusElement: resource.statusElement == null ? null : resource.statusElement,
method: resource.method == null ? null : resource.method,
code: resource.code == null ? null : resource.code,
subject: resource.subject == null ? null : resource.subject,
encounter: resource.encounter == null ? null : resource.encounter,
occurrenceDateTime: resource.occurrenceDateTime == null ? null : resource.occurrenceDateTime,
occurrenceDateTimeElement: resource.occurrenceDateTimeElement == null ? null : resource.occurrenceDateTimeElement,
occurrencePeriod: resource.occurrencePeriod == null ? null : resource.occurrencePeriod,
condition: resource.condition == null ? null : resource.condition,
performer: resource.performer == null ? null : resource.performer,
reason: resource.reason == null ? null : resource.reason,
basis: resource.basis == null ? null : resource.basis,
prediction: resource.prediction == null ? null : resource.prediction,
mitigation: resource.mitigation == null ? null : resource.mitigation,
mitigationElement: resource.mitigationElement == null ? null : resource.mitigationElement,
note: resource.note == null ? null : resource.note,

);
